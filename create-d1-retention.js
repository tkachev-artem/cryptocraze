// –°–æ–∑–¥–∞–Ω–∏–µ D1 retention –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userId = '104134105374483317232';

async function createD1RetentionData() {
  console.log(`üéØ –°–æ–∑–¥–∞–Ω–∏–µ D1 retention –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userId}\n`);
  
  // –í—á–µ—Ä–∞—à–Ω—è—è –¥–∞—Ç–∞ (–¥–µ–Ω—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
  const yesterday = new Date();
  yesterday.setDate(yesterday.getDate() - 1);
  yesterday.setHours(10, 0, 0, 0); // 10:00 —É—Ç—Ä–∞ –≤—á–µ—Ä–∞
  
  // –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ (–¥–µ–Ω—å –≤–æ–∑–≤—Ä–∞—Ç–∞ - D1)
  const today = new Date();
  today.setHours(15, 30, 0, 0); // 15:30 —Å–µ–≥–æ–¥–Ω—è
  
  console.log(`üìÖ –î–µ–Ω—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${yesterday.toLocaleString()}`);
  console.log(`üìÖ –î–µ–Ω—å –≤–æ–∑–≤—Ä–∞—Ç–∞ (D1): ${today.toLocaleString()}\n`);
  
  // –°–æ–±—ã—Ç–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–≤—á–µ—Ä–∞)
  const registrationEvents = [
    { type: 'user_register', time: yesterday, data: { method: 'google_oauth' } },
    { type: 'first_open', time: new Date(yesterday.getTime() + 5000), data: { source: 'direct' } },
    { type: 'tutorial_start', time: new Date(yesterday.getTime() + 30000), data: { step: 1 } },
    { type: 'tutorial_complete', time: new Date(yesterday.getTime() + 300000), data: { completed: true } },
    { type: 'trade_open', time: new Date(yesterday.getTime() + 600000), data: { symbol: 'BTCUSDT', amount: 100 } }
  ];
  
  // –°–æ–±—ã—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ (—Å–µ–≥–æ–¥–Ω—è - D1)
  const returnEvents = [
    { type: 'login', time: today, data: { session_start: true } },
    { type: 'screen_view', time: new Date(today.getTime() + 10000), data: { screen: 'dashboard' } },
    { type: 'price_stream_start', time: new Date(today.getTime() + 20000), data: { symbols: ['BTCUSDT', 'ETHUSDT'] } },
    { type: 'trade_open', time: new Date(today.getTime() + 120000), data: { symbol: 'ETHUSDT', amount: 200 } },
    { type: 'daily_reward_claimed', time: new Date(today.getTime() + 300000), data: { reward: 50 } }
  ];
  
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–≤—á–µ—Ä–∞)...');
  for (const event of registrationEvents) {
    await createAnalyticsEvent(event.type, event.data, event.time, 'RU'); // –†–æ—Å—Å–∏—è
  }
  
  console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –≤–æ–∑–≤—Ä–∞—Ç–∞ (—Å–µ–≥–æ–¥–Ω—è - D1)...');
  for (const event of returnEvents) {
    await createAnalyticsEvent(event.type, event.data, event.time, 'RU'); // –†–æ—Å—Å–∏—è
  }
  
  console.log('\n‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:');
  console.log('   1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Admin -> User Analytics');
  console.log('   2. –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫—É "D1 Retention"');
  console.log('   3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 104134105374483317232 –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ');
  console.log('   4. –í –∫–æ–ª–æ–Ω–∫–µ "Region" –±—É–¥–µ—Ç "RU (Russia)"');
}

async function createAnalyticsEvent(eventType, eventData, timestamp, country) {
  const russianIP = '77.88.8.8'; // Yandex DNS (–†–æ—Å—Å–∏—è)
  
  try {
    const response = await fetch('http://localhost:1111/api/analytics/batch', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-Forwarded-For': russianIP,
        'X-Real-IP': russianIP,
        'User-Agent': 'RetentionTest/1.0'
      },
      body: JSON.stringify({
        events: [{
          eventType: eventType,
          eventData: {
            ...eventData,
            userId: userId,
            testData: true,
            country: country
          },
          sessionId: `retention-test-${userId}-${timestamp.getTime()}`,
          timestamp: timestamp.toISOString()
        }]
      })
    });

    if (response.ok) {
      console.log(`   ‚úÖ ${eventType} (${timestamp.toLocaleTimeString()})`);
    } else {
      const error = await response.text();
      console.log(`   ‚ùå ${eventType}: ${response.status} - ${error}`);
    }
  } catch (error) {
    console.log(`   üí• ${eventType}: ${error.message}`);
  }
  
  // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
  await new Promise(resolve => setTimeout(resolve, 100));
}

// –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–¥–∏–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
async function createUserRecord() {
  console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î...\n');
  
  const yesterday = new Date();
  yesterday.setDate(yesterday.getDate() - 1);
  yesterday.setHours(10, 0, 0, 0);
  
  try {
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ analytics —Å–æ–±—ã—Ç–∏—è
    await createAnalyticsEvent('user_register', {
      email: 'test.retention@example.com',
      firstName: 'Test User D1',
      method: 'test_data'
    }, yesterday, 'RU');
    
    console.log('‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞–Ω–∞');
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${error.message}`);
  }
}

async function runRetentionSetup() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ D1 Retention –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n');
  console.log('=' .repeat(50));
  
  await createUserRecord();
  await createD1RetentionData();
  
  console.log('\n' + '=' .repeat(50));
  console.log('üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

runRetentionSetup().catch(console.error);
