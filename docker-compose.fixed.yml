# Fixed multi-container setup with host networking for app
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: host
    environment:
      - NODE_ENV=production
      - PORT=1111
      - DATABASE_URL=postgresql://postgres:password@localhost:5433/crypto_analyzer
      - REDIS_URL=redis://localhost:6379
      - CLICKHOUSE_URL=http://localhost:8123
      - CLICKHOUSE_DATABASE=cryptocraze_analytics
      - ENABLE_REDIS_SCALING=false
      - SKIP_MIGRATIONS=false
      - STATIC_ONLY=false
      - GOOGLE_CLIENT_ID=707632794493-5lhl2avka63s62n4nje0qlvg7vd90dc4.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_CALLBACK_URL=http://localhost:1111/api/auth/google/callback
      - SESSION_SECRET=production-secret-change-me-123456789
      - FRONTEND_URL=http://localhost:1111
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=crypto_analyzer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./drizzle:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d crypto_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=cryptocraze_analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  clickhouse_logs: