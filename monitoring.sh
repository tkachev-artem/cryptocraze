#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üìä CryptoCraze Services Monitoring"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_service() {
    local service=$1
    local port=$2
    local name=$3
    
    if systemctl is-active --quiet $service 2>/dev/null; then
        echo -e "${GREEN}‚úÖ $name: Running${NC}"
        if [ ! -z "$port" ]; then
            if curl -s --max-time 3 http://localhost:$port > /dev/null 2>&1; then
                echo -e "   ${GREEN}üåê Port $port: Responding${NC}"
            else
                echo -e "   ${RED}üö´ Port $port: Not responding${NC}"
            fi
        fi
    else
        echo -e "${RED}‚ùå $name: Not running${NC}"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
check_pm2() {
    echo -e "\n${YELLOW}PM2 Processes:${NC}"
    pm2 jlist | jq -r '.[] | "\(.name): \(.pm2_env.status) (CPU: \(.monit.cpu)%, Memory: \(.monit.memory | tonumber / 1024 / 1024 | round)MB)"' 2>/dev/null || echo "PM2 not available or no processes"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
check_disk() {
    echo -e "\n${YELLOW}Disk Usage:${NC}"
    df -h | grep -E '^/dev/' | awk '{ printf "%-20s %s used of %s (%s)\n", $1, $3, $2, $5 }'
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
check_memory() {
    echo -e "\n${YELLOW}Memory Usage:${NC}"
    free -h | grep -E '^Mem:' | awk '{ printf "Used: %s / %s (%s%%)\n", $3, $2, int($3/$2*100) }'
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –º–∏–Ω—É—Ç)
check_errors() {
    echo -e "\n${YELLOW}Recent Errors (last 10 minutes):${NC}"
    journalctl --since "10 minutes ago" --priority=err --no-pager -n 5 | tail -n 5 || echo "No recent errors"
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo -e "\n${YELLOW}System Services:${NC}"
check_service "nginx" "80" "Nginx"
check_service "redis-server" "6379" "Redis"
check_service "cryptocraze-backend" "3001" "Backend API"
check_service "cloudflared" "" "Cloudflare Tunnel"

check_pm2
check_disk
check_memory
check_errors

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API
echo -e "\n${YELLOW}API Health Check:${NC}"
api_response=$(curl -s --max-time 5 http://localhost:3001/api/health 2>/dev/null)
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ API: Responding${NC}"
    echo "Response: $api_response"
else
    echo -e "${RED}‚ùå API: Not responding${NC}"
fi

echo -e "\n=================================="
echo -e "üîç Use these commands for more details:"
echo -e "  systemctl status [service-name]"
echo -e "  pm2 logs cryptocraze-backend"
echo -e "  journalctl -fu [service-name]"
echo -e "  nginx -t (test config)"