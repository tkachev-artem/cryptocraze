// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞
const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({ connectionString: process.env.DATABASE_URL });

const checkAdminRole = async () => {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞...\n');
    
    const query = 'SELECT id, email, first_name, last_name, role FROM users WHERE role = \'admin\'';
    const result = await pool.query(query);
    
    if (result.rows.length === 0) {
      console.log('‚ùå –ê–¥–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç set-admin-role.js –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞');
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${result.rows.length} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:`);
      result.rows.forEach((user, index) => {
        console.log(`${index + 1}. ID: ${user.id}`);
        console.log(`   Email: ${user.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.last_name || ''}`);
        console.log(`   –†–æ–ª—å: ${user.role}`);
        console.log('');
      });
      
      console.log('üéØ –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Swagger –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
      console.log(`   ID: ${result.rows[0].id}`);
      console.log(`   Email: ${result.rows[0].email}`);
      console.log('');
      console.log('üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
      console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/api-docs');
      console.log('   2. –ù–∞–∂–º–∏—Ç–µ "Authorize" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É');
      console.log('   3. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Google OAuth —Å —ç—Ç–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º');
      console.log('   4. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω—Å–∫–∏–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞:', error);
  } finally {
    await pool.end();
  }
};

checkAdminRole();