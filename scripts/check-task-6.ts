import { db } from '../server/db';
import { userTasks } from '../shared/schema';
import { eq } from 'drizzle-orm';

const checkTask6 = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏—è —Å ID 6...\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏–µ —Å ID 6
    const task = await db.select().from(userTasks).where(eq(userTasks.id, 6));
    
    if (task.length > 0) {
      const t = task[0];
      console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:');
      console.log('üìã ID:', t.id);
      console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', t.userId);
      console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', t.title);
      console.log('üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:', t.progressCurrent, '/', t.progressTotal);
      console.log('üìà –°—Ç–∞—Ç—É—Å:', t.status);
      console.log('üí∞ –ù–∞–≥—Ä–∞–¥–∞:', t.rewardAmount, t.rewardType);
      console.log('üìÖ –°–æ–∑–¥–∞–Ω–æ:', t.createdAt);
      console.log('‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç:', t.expiresAt);
    } else {
      console.log('‚ùå –ó–∞–¥–∞–Ω–∏–µ —Å ID 6 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
    const activeTasks = await db.select().from(userTasks).where(eq(userTasks.status, 'active'));
    console.log('\nüìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è:');
    activeTasks.forEach((t, index) => {
      console.log(`   ${index + 1}. ID: ${t.id} - ${t.title} (${t.status})`);
      console.log(`      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${t.userId}`);
      console.log(`      –ü—Ä–æ–≥—Ä–µ—Å—Å: ${t.progressCurrent}/${t.progressTotal}`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
  
  process.exit(0);
};

checkTask6(); 