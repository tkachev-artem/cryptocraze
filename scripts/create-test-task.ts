import { db } from '../server/db';
import { userTasks } from '../shared/schema';
import { TaskService } from '../server/services/taskService';

const createTestTask = async () => {
  console.log('üéÆ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n');
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ê—Ä—Ç—ë–º–∞ –¢–∫–∞—á—ë–≤–∞ –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userId = '111907067370663926621';
  
  try {
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userId);
    console.log('üìù –°–æ–∑–¥–∞—é –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞...');
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    const task = await TaskService.createTaskByTemplateId(userId, 'simple_daily_task');
    
    if (task) {
      console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!');
      console.log('üìã ID:', task.id);
      console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', task.title);
      console.log('üìÑ –û–ø–∏—Å–∞–Ω–∏–µ:', task.description);
      console.log('üí∞ –ù–∞–≥—Ä–∞–¥–∞:', task.reward.amount, task.reward.type);
      console.log('üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:', task.progress.current, '/', task.progress.total);
      console.log('üìà –°—Ç–∞—Ç—É—Å:', task.status);
      console.log('üé® –ò–∫–æ–Ω–∫–∞:', task.icon);
      console.log('');
      
      console.log('üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:');
      console.log('   GET /api/tasks - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('   POST /api/tasks/{taskId}/progress - –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å');
      console.log('   DELETE /api/tasks/{taskId} - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ');
      console.log('');
      
      console.log('üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log('   GET /api/tasks');
      
    } else {
      console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ');
      console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π (3)');
      console.log('   - –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
      console.log('   - –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è:', error);
  }
  
  process.exit(0);
};

createTestTask(); 