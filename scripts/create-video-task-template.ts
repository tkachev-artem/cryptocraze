import { TaskTemplateService } from '../server/services/taskTemplateService';

const createVideoTaskTemplate = async () => {
  console.log('üé¨ –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –≤–∏–¥–µ–æ-–∑–∞–¥–∞–Ω–∏—è...\n');
  
  try {
    const taskData = {
      templateId: 'video_bonus_task',
      taskType: 'video_bonus',
      title: '–°–º–æ—Ç—Ä–∏—Ç–µ –≤–∏–¥–µ–æ',
      description: '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!',
      rewardType: 'money' as const,
      rewardAmount: '1K',
      progressTotal: 1,
      icon: '/trials/video.svg',
      category: 'video' as const,
      rarity: 'common' as const,
      expiresInHours: 12,
      isActive: true,
      createdBy: '116069980752518862717' // Admin Platform ID
    };
    
    console.log('üìù –°–æ–∑–¥–∞—é —à–∞–±–ª–æ–Ω:', taskData.title);
    
    const result = await TaskTemplateService.createTemplate(taskData);
    
    if (result) {
      console.log('‚úÖ –®–∞–±–ª–æ–Ω –≤–∏–¥–µ–æ-–∑–∞–¥–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω!');
      console.log('üìã ID:', result.id);
      console.log('üéØ Template ID:', result.templateId);
      console.log('üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', result.title);
      console.log('üí∞ –ù–∞–≥—Ä–∞–¥–∞:', result.rewardAmount, result.rewardType);
      console.log('');
      
      console.log('üéÆ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log('   POST /api/tasks/create/template/video_bonus_task');
      
    } else {
      console.log('‚ö†Ô∏è  –®–∞–±–ª–æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞:', error);
  }
  
  process.exit(0);
};

createVideoTaskTemplate(); 