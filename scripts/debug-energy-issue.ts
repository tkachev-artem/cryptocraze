#!/usr/bin/env tsx

import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';
import { PrizeService } from '../server/services/prizeService';

async function debugEnergyIssue() {
  try {
    console.log('ÔøΩÔøΩ –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤—ã—á–∏—Ç–∞–Ω–∏–µ–º —ç–Ω–µ—Ä–≥–∏–∏...\n');

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const user = await db
      .select({ 
        id: users.id,
        email: users.email,
        energyTasksBonus: users.energyTasksBonus,
        balance: users.balance
      })
      .from(users)
      .where(eq(users.email, 'exsiseprogram@gmail.com'))
      .limit(1);

    if (!user.length) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const testUser = user[0];
    console.log('üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
    console.log('  ID:', testUser.id);
    console.log('  Email:', testUser.email);
    console.log('  –≠–Ω–µ—Ä–≥–∏—è –¥–æ —Ç–µ—Å—Ç–∞:', testUser.energyTasksBonus);
    console.log('  –ë–∞–ª–∞–Ω—Å –¥–æ —Ç–µ—Å—Ç–∞:', testUser.balance);
    console.log('');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ—Ä–æ–±–∫–∏
    const boxTypes = ['red', 'green', 'x'] as const;
    
    for (const boxType of boxTypes) {
      console.log(`üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ ${boxType} –∫–æ—Ä–æ–±–∫–∏:`);
      
      try {
        const requiredEnergy = await PrizeService.getRequiredEnergy(boxType);
        console.log(`  –¢—Ä–µ–±—É–µ—Ç—Å—è —ç–Ω–µ—Ä–≥–∏–∏: ${requiredEnergy}`);
        
        if ((testUser.energyTasksBonus || 0) < requiredEnergy) {
          console.log(`  ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏ (–Ω—É–∂–Ω–æ ${requiredEnergy}, –µ—Å—Ç—å ${testUser.energyTasksBonus})`);
          
          // –î–æ–±–∞–≤–ª—è–µ–º —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          await db.update(users)
            .set({ energyTasksBonus: requiredEnergy })
            .where(eq(users.id, testUser.id));
          
          console.log(`  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —ç–Ω–µ—Ä–≥–∏—è –¥–æ ${requiredEnergy}`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const updatedUser = await db
            .select({ energyTasksBonus: users.energyTasksBonus })
            .from(users)
            .where(eq(users.id, testUser.id))
            .limit(1);
          
          console.log(`  üîã –≠–Ω–µ—Ä–≥–∏—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ${updatedUser[0]?.energyTasksBonus}`);
        } else {
          console.log(`  ‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏`);
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–æ–±–∫–∏
        console.log(`  üéÅ –û—Ç–∫—Ä—ã–≤–∞–µ–º ${boxType} –∫–æ—Ä–æ–±–∫—É...`);
        
        const result = await PrizeService.openBox(testUser.id, boxType);
        
        console.log(`  ‚úÖ –ö–æ—Ä–æ–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —É—Å–ø–µ—à–Ω–æ!`);
        console.log(`  üéÅ –ü—Ä–∏–∑: ${result.prize.prizeType === 'pro' ? `PRO ${result.prize.proDays} –¥–Ω–µ–π` : `$${result.prize.amount}`}`);
        console.log(`  üîã –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏: ${result.energySpent}`);
        console.log(`  üí∞ –ü–æ–ª—É—á–µ–Ω–æ –¥–µ–Ω–µ–≥: ${result.balanceUpdate || 0}`);
        console.log(`  üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const finalUser = await db
          .select({ 
            energyTasksBonus: users.energyTasksBonus,
            balance: users.balance,
            isPremium: users.isPremium
          })
          .from(users)
          .where(eq(users.id, testUser.id))
          .limit(1);
        
        console.log(`  üîã –≠–Ω–µ—Ä–≥–∏—è –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è: ${finalUser[0]?.energyTasksBonus}`);
        console.log(`  üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è: ${finalUser[0]?.balance}`);
        console.log(`  üëë PRO —Å—Ç–∞—Ç—É—Å: ${finalUser[0]?.isPremium ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–µ—Å—Ç–∞
        testUser.energyTasksBonus = finalUser[0]?.energyTasksBonus || 0;
        testUser.balance = finalUser[0]?.balance || '0';
        
      } catch (error) {
        console.log(`  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ ${boxType} –∫–æ—Ä–æ–±–∫–∏:`, error);
      }
      
      console.log('');
    }

    console.log('‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error);
  } finally {
    await db.disconnect();
  }
}

debugEnergyIssue(); 