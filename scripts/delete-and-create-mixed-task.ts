import { db } from '../server/db';
import { userTasks, users } from '../shared/schema';
import { eq, and } from 'drizzle-orm';
import { TaskService } from '../server/services/taskService';

async function deleteAndCreateMixedTask() {
  console.log('üß™ –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ...\n');

  // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const testUser = await db.select().from(users).limit(1);
  if (!testUser.length) {
    console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    return;
  }

  const userId = testUser[0].id;
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

  // –ù–∞–π–¥–µ–º –æ–±—ã—á–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ (–Ω–µ mixed) –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
  const regularTask = await db.select()
    .from(userTasks)
    .where(
      and(
        eq(userTasks.userId, userId),
        eq(userTasks.status, 'active'),
        eq(userTasks.rewardType, 'coins') // –£–¥–∞–ª–∏–º –∑–∞–¥–∞–Ω–∏–µ —Å –º–æ–Ω–µ—Ç–∞–º–∏
      )
    )
    .limit(1);

  if (!regularTask.length) {
    console.log('‚ùå –ù–µ—Ç –æ–±—ã—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
    return;
  }

  const taskToDelete = regularTask[0];
  console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ: ${taskToDelete.title} (${taskToDelete.rewardAmount} ${taskToDelete.rewardType})`);
  
  await db.delete(userTasks).where(eq(userTasks.id, taskToDelete.id));
  console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');

  // –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
  const activeTasks = await db.select()
    .from(userTasks)
    .where(
      and(
        eq(userTasks.userId, userId),
        eq(userTasks.status, 'active')
      )
    );

  console.log(`üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: ${activeTasks.length}`);

  // –°–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
  console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ...');
  
  const testTask = await TaskService.createTask(userId, {
    taskType: 'test_mixed_coins',
    title: '–¢–µ—Å—Ç —Å–º–µ—à–∞–Ω–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã (–º–æ–Ω–µ—Ç—ã)',
    description: '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ —Å –º–æ–Ω–µ—Ç–∞–º–∏',
    rewardType: 'mixed',
    rewardAmount: '15_energy_1K_coins',
    progressTotal: 1,
    icon: '/trials/test.svg',
    expiresInHours: 1
  });

  if (!testTask) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ');
    return;
  }

  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!');
  console.log(`üìù ID: ${testTask.id}`);
  console.log(`üéÅ –¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã: ${testTask.reward.type}`);
  console.log(`üéÅ –°—É–º–º–∞ –Ω–∞–≥—Ä–∞–¥—ã: ${testTask.reward.amount}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –≤ –ë–î
  const savedTask = await db.select()
    .from(userTasks)
    .where(eq(userTasks.id, parseInt(testTask.id)))
    .limit(1);

  if (savedTask.length > 0) {
    console.log('\n‚úÖ –ó–∞–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î:');
    console.log(`   –¢–∏–ø: ${savedTask[0].rewardType}`);
    console.log(`   –ù–∞–≥—Ä–∞–¥–∞: ${savedTask[0].rewardAmount}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${savedTask[0].status}`);
  } else {
    console.log('\n‚ùå –ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î');
  }

  return testTask;
}

deleteAndCreateMixedTask().catch(console.error); 