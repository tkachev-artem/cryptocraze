import { TaskTemplateService as DatabaseTaskTemplateService } from '../server/services/taskTemplateService';
import { TaskTemplateService } from '../server/services/taskTemplates';

async function initEnergyCoinTemplates() {
  console.log('üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–¥–∞–Ω–∏–π —Å —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –º–æ–Ω–µ—Ç–∞–º–∏...\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
    const energyTemplates = TaskTemplateService.getEnergyTemplates();
    const cryptoTemplates = TaskTemplateService.getCryptoTemplates();
    const energyRewardTemplates = TaskTemplateService.getEnergyRewardTemplates();
    const coinRewardTemplates = TaskTemplateService.getCoinRewardTemplates();

    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤:`);
    console.log(`   - –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ: ${energyTemplates.length}`);
    console.log(`   - –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ: ${cryptoTemplates.length}`);
    console.log(`   - –° —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏: ${energyRewardTemplates.length}`);
    console.log(`   - –° –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö: ${coinRewardTemplates.length}`);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã
    console.log('\nüìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤...');
    for (const template of energyTemplates) {
      try {
        await DatabaseTaskTemplateService.createTemplate({
          templateId: template.id,
          taskType: template.taskType,
          title: template.title,
          description: template.description || '',
          rewardType: template.rewardType,
          rewardAmount: template.rewardAmount,
          progressTotal: template.progressTotal,
          icon: template.icon,
          category: 'daily', // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º 'daily' –≤–º–µ—Å—Ç–æ 'energy'
          rarity: template.rarity,
          expiresInHours: template.expiresInHours
        }, 'system');
        console.log(`   ‚úÖ ${template.title}`);
      } catch (error: any) {
        if (error.message.includes('duplicate key')) {
          console.log(`   ‚ö†Ô∏è  ${template.title} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)`);
        } else {
          console.log(`   ‚ùå ${template.title}: ${error.message}`);
        }
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    console.log('\nüìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤...');
    for (const template of cryptoTemplates) {
      try {
        await DatabaseTaskTemplateService.createTemplate({
          templateId: template.id,
          taskType: template.taskType,
          title: template.title,
          description: template.description || '',
          rewardType: template.rewardType,
          rewardAmount: template.rewardAmount,
          progressTotal: template.progressTotal,
          icon: template.icon,
          category: 'trade', // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º 'trade' –≤–º–µ—Å—Ç–æ 'crypto'
          rarity: template.rarity,
          expiresInHours: template.expiresInHours
        }, 'system');
        console.log(`   ‚úÖ ${template.title}`);
      } catch (error: any) {
        if (error.message.includes('duplicate key')) {
          console.log(`   ‚ö†Ô∏è  ${template.title} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)`);
        } else {
          console.log(`   ‚ùå ${template.title}: ${error.message}`);
        }
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...');
    const dbEnergyTemplates = await DatabaseTaskTemplateService.getTemplatesByCategory('energy');
    const dbCryptoTemplates = await DatabaseTaskTemplateService.getTemplatesByCategory('crypto');
    
    console.log(`   - –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤ –ë–î: ${dbEnergyTemplates.length}`);
    console.log(`   - –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö –≤ –ë–î: ${dbCryptoTemplates.length}`);

    console.log('\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initEnergyCoinTemplates().catch(console.error); 