import { db } from '../server/db';
import { boxTypes, prizes } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function initPrizeSystem() {
  try {
    console.log('üéÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–∑–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∏–ø—ã –∫–æ—Ä–æ–±–æ–∫
    const existingBoxTypes = await db.select().from(boxTypes);
    
    if (existingBoxTypes.length > 0) {
      console.log('‚úÖ –¢–∏–ø—ã –∫–æ—Ä–æ–±–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ...');
    } else {
      console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–æ—Ä–æ–±–æ–∫...');
      
      // –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –∫–æ—Ä–æ–±–æ–∫
      await db.insert(boxTypes).values([
        {
          type: 'red',
          name: '–ö—Ä–∞—Å–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
          requiredEnergy: 30,
          description: '–ë–∞–∑–æ–≤–∞—è –∫–æ—Ä–æ–±–∫–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏'
        },
        {
          type: 'green',
          name: '–ó–µ–ª–µ–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞',
          requiredEnergy: 70,
          description: '–°—Ä–µ–¥–Ω—è—è –∫–æ—Ä–æ–±–∫–∞ —Å —Ö–æ—Ä–æ—à–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏'
        },
        {
          type: 'x',
          name: 'X –∫–æ—Ä–æ–±–∫–∞',
          requiredEnergy: 100,
          description: '–ü—Ä–µ–º–∏—É–º –∫–æ—Ä–æ–±–∫–∞ —Å –ª—É—á—à–∏–º–∏ –ø—Ä–∏–∑–∞–º–∏'
        }
      ]);
      
      console.log('‚úÖ –¢–∏–ø—ã –∫–æ—Ä–æ–±–æ–∫ —Å–æ–∑–¥–∞–Ω—ã');
    }

    // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∏–ø–æ–≤ –∫–æ—Ä–æ–±–æ–∫
    const boxTypesData = await db.select().from(boxTypes);
    const redBoxId = boxTypesData.find(bt => bt.type === 'red')?.id;
    const greenBoxId = boxTypesData.find(bt => bt.type === 'green')?.id;
    const xBoxId = boxTypesData.find(bt => bt.type === 'x')?.id;

    if (!redBoxId || !greenBoxId || !xBoxId) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ID —Ç–∏–ø–æ–≤ –∫–æ—Ä–æ–±–æ–∫');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–∏–∑—ã
    const existingPrizes = await db.select().from(prizes);
    
    if (existingPrizes.length > 0) {
      console.log('‚úÖ –ü—Ä–∏–∑—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ...');
    } else {
      console.log('üéÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–∑–æ–≤...');
      
      // –ü—Ä–∏–∑—ã –¥–ª—è –∫—Ä–∞—Å–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏
      await db.insert(prizes).values([
        { boxTypeId: redBoxId, prizeType: 'money', amount: 100, chance: 15 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 200, chance: 12 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 300, chance: 10 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 400, chance: 8 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 500, chance: 7 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 600, chance: 6 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 700, chance: 5 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 800, chance: 4 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 900, chance: 3 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 1000, chance: 3 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 1200, chance: 2 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 1500, chance: 2 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 1800, chance: 1.5 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 2000, chance: 1.5 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 2500, chance: 1 },
        { boxTypeId: redBoxId, prizeType: 'money', amount: 3000, chance: 1 },
        { boxTypeId: redBoxId, prizeType: 'pro', proDays: 3, chance: 0.5 }
      ]);

      // –ü—Ä–∏–∑—ã –¥–ª—è –∑–µ–ª–µ–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏
      await db.insert(prizes).values([
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 500, chance: 15 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 1000, chance: 12 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 1500, chance: 10 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 2000, chance: 8 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 2500, chance: 7 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 3000, chance: 6 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 4000, chance: 5 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 5000, chance: 4 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 6000, chance: 3 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 7000, chance: 3 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 8000, chance: 2 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 10000, chance: 2 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 12000, chance: 1.5 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 15000, chance: 1.5 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 20000, chance: 1 },
        { boxTypeId: greenBoxId, prizeType: 'money', amount: 25000, chance: 1 },
        { boxTypeId: greenBoxId, prizeType: 'pro', proDays: 7, chance: 1 }
      ]);

      // –ü—Ä–∏–∑—ã –¥–ª—è X –∫–æ—Ä–æ–±–∫–∏
      await db.insert(prizes).values([
        { boxTypeId: xBoxId, prizeType: 'money', amount: 1000, chance: 15 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 2000, chance: 12 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 3000, chance: 10 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 5000, chance: 8 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 7000, chance: 7 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 10000, chance: 6 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 15000, chance: 5 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 20000, chance: 4 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 25000, chance: 3 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 30000, chance: 3 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 40000, chance: 2 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 50000, chance: 2 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 75000, chance: 1.5 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 100000, chance: 1.5 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 150000, chance: 1 },
        { boxTypeId: xBoxId, prizeType: 'money', amount: 200000, chance: 1 },
        { boxTypeId: xBoxId, prizeType: 'pro', proDays: 30, chance: 2 }
      ]);
      
      console.log('‚úÖ –ü—Ä–∏–∑—ã —Å–æ–∑–¥–∞–Ω—ã');
    }

    console.log('üéâ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–∑–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalPrizes = await db.select().from(prizes);
    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–∏–∑–æ–≤: ${totalPrizes.length}`);
    
    const redPrizes = totalPrizes.filter(p => p.boxTypeId === redBoxId);
    const greenPrizes = totalPrizes.filter(p => p.boxTypeId === greenBoxId);
    const xPrizes = totalPrizes.filter(p => p.boxTypeId === xBoxId);
    
    console.log(`üî¥ –ö—Ä–∞—Å–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞: ${redPrizes.length} –ø—Ä–∏–∑–æ–≤`);
    console.log(`üü¢ –ó–µ–ª–µ–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞: ${greenPrizes.length} –ø—Ä–∏–∑–æ–≤`);
    console.log(`‚ùå X –∫–æ—Ä–æ–±–∫–∞: ${xPrizes.length} –ø—Ä–∏–∑–æ–≤`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–∑–æ–≤:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initPrizeSystem(); 