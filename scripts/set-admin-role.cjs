// –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞
const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({ connectionString: process.env.DATABASE_URL });

const setAdminRole = async (userId) => {
  try {
    console.log(`üîß –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}...\n`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const checkQuery = 'SELECT id, email, first_name, last_name FROM users WHERE id = $1';
    const checkResult = await pool.query(checkQuery, [userId]);
    
    if (checkResult.rows.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const user = checkResult.rows[0];
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:`);
    console.log(`   ID: ${user.id}`);
    console.log(`   Email: ${user.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.last_name || ''}`);
    console.log('');
    
    // –î–æ–±–∞–≤–∏–º –ø–æ–ª–µ role –≤ —Ç–∞–±–ª–∏—Ü—É users, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    try {
      await pool.query('ALTER TABLE users ADD COLUMN IF NOT EXISTS role VARCHAR(20) DEFAULT \'user\'');
      console.log('‚úÖ –ü–æ–ª–µ role –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É users');
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ü–æ–ª–µ role —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
    
    // –ù–∞–∑–Ω–∞—á–∏–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞
    const updateQuery = 'UPDATE users SET role = $1 WHERE id = $2';
    const updateResult = await pool.query(updateQuery, ['admin', userId]);
    
    if (updateResult.rowCount > 0) {
      console.log('‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞!');
      console.log('');
      console.log('üéØ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç ID –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Swagger:');
      console.log(`   ID: ${userId}`);
      console.log(`   Email: ${user.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log('');
      console.log('üìù –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Swagger:');
      console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000/api-docs');
      console.log('   2. –ù–∞–∂–º–∏—Ç–µ "Authorize" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É');
      console.log('   3. –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Google OAuth —Å —ç—Ç–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º');
      console.log('   4. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω—Å–∫–∏–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await pool.end();
  }
};

// –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const userId = process.argv[2] || '116069980752518862717'; // ID Admin Platform

console.log('üöÄ –°–∫—Ä–∏–ø—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∞\n');
console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
console.log('1. 111907067370663926621 - exsiseprogram@gmail.com (–ê—Ä—Ç—ë–º –¢–∫–∞—á—ë–≤)');
console.log('2. 116069980752518862717 - cryptocrazegame@gmail.com (Admin Platform)');
console.log('');

setAdminRole(userId); 