import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function testApiResponse() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ API...\n');

  // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID –∏–∑ –ª–æ–≥–æ–≤
  const userId = '111907067370663926621';
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
  const userFromDb = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  if (!userFromDb.length) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
    return;
  }

  console.log('üìä –î–∞–Ω–Ω—ã–µ –≤ –ë–î:');
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î:', userFromDb[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î:', userFromDb[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î:', userFromDb[0].energyTasksBonus);

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API /auth/user
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API /auth/user...');
  
  try {
    const response = await fetch('http://localhost:8000/api/auth/user', {
      credentials: 'include',
      headers: {
        'Cookie': 'connect.sid=s%3A111907067370663926621.abc123' // –ü—Ä–∏–º–µ—Ä cookie
      }
    });

    if (response.ok) {
      const apiUser = await response.json();
      console.log('‚úÖ API /auth/user –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ API:', apiUser.balance);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ API:', apiUser.coins);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ API:', apiUser.energyTasksBonus);

      // –°—Ä–∞–≤–Ω–∏–º —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ë–î
      const balanceMatch = apiUser.balance === userFromDb[0].balance;
      const coinsMatch = apiUser.coins === userFromDb[0].coins;
      const energyMatch = apiUser.energyTasksBonus === userFromDb[0].energyTasksBonus;

      console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ API —Å –ë–î:');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', balanceMatch);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç:', coinsMatch);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', energyMatch);

      if (balanceMatch && coinsMatch && energyMatch) {
        console.log('\n‚úÖ API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('\n‚ùå API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ!');
      }
    } else {
      console.log('‚ùå API /auth/user –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', response.status, response.statusText);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ cookie
      console.log('\nüîÑ –ü—Ä–æ–±—É–µ–º –±–µ–∑ cookie...');
      const response2 = await fetch('http://localhost:8000/api/auth/user', {
        credentials: 'include'
      });
      
      if (response2.ok) {
        const apiUser2 = await response2.json();
        console.log('‚úÖ API /auth/user –æ—Ç–≤–µ—Ç–∏–ª –±–µ–∑ cookie');
        console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ API:', apiUser2.balance);
        console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ API:', apiUser2.coins);
        console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ API:', apiUser2.energyTasksBonus);
      } else {
        console.log('‚ùå API /auth/user –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –±–µ–∑ cookie:', response2.status, response2.statusText);
      }
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API /auth/user:', error);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ storage.getUser
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º storage.getUser...');
  
  try {
    const { storage } = await import('../server/storage');
    const userFromStorage = await storage.getUser(userId);
    
    if (userFromStorage) {
      console.log('‚úÖ storage.getUser –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ:');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ storage:', userFromStorage.balance);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ storage:', userFromStorage.coins);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ storage:', userFromStorage.energyTasksBonus);
      
      // –°—Ä–∞–≤–Ω–∏–º —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ë–î
      const storageBalanceMatch = userFromStorage.balance === userFromDb[0].balance;
      const storageCoinsMatch = userFromStorage.coins === userFromDb[0].coins;
      const storageEnergyMatch = userFromStorage.energyTasksBonus === userFromDb[0].energyTasksBonus;

      console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ storage —Å –ë–î:');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', storageBalanceMatch);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç:', storageCoinsMatch);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', storageEnergyMatch);
    } else {
      console.log('‚ùå storage.getUser –≤–µ—Ä–Ω—É–ª null');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ storage.getUser:', error);
  }
}

testApiResponse().catch(console.error); 