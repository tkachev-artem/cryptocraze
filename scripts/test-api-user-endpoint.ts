import { db } from '../server/db';
import { userTasks, users } from '../shared/schema';
import { eq, and } from 'drizzle-orm';
import { TaskService } from '../server/services/taskService';

async function testApiUserEndpoint() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /auth/user...\n');

  // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const testUser = await db.select().from(users).limit(1);
  if (!testUser.length) {
    console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    return;
  }

  const userId = testUser[0].id;
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const userBefore = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î –¥–æ:', userBefore[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î –¥–æ:', userBefore[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î –¥–æ:', userBefore[0].energyTasksBonus);

  // –ù–∞–π–¥–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
  const mixedTask = await db.select()
    .from(userTasks)
    .where(
      and(
        eq(userTasks.userId, userId),
        eq(userTasks.status, 'active'),
        eq(userTasks.rewardType, 'mixed')
      )
    )
    .limit(1);

  if (!mixedTask.length) {
    console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–º–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π');
    return;
  }

  const task = mixedTask[0];
  console.log(`\nüìù –ù–∞–π–¥–µ–Ω–æ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${task.title}`);
  console.log(`üéÅ –ù–∞–≥—Ä–∞–¥–∞: ${task.rewardAmount} ${task.rewardType}`);

  // –í—ã–ø–æ–ª–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ
  console.log('\nüèÉ –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞–Ω–∏–µ...');
  
  const result = await TaskService.updateTaskProgress(task.id, userId, task.progressTotal);
  
  if (!result) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ');
    return;
  }

  console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const userAfter = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  console.log('\nüìä –î–∞–Ω–Ω—ã–µ –≤ –ë–î –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:');
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].energyTasksBonus);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
  const balanceChange = parseFloat(userAfter[0].balance || '0') - parseFloat(userBefore[0].balance || '0');
  const coinsChange = (userAfter[0].coins || 0) - (userBefore[0].coins || 0);
  const energyChange = (userAfter[0].energyTasksBonus || 0) - (userBefore[0].energyTasksBonus || 0);

  console.log('\nüìà –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î:');
  console.log('üí∞ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:', balanceChange);
  console.log('ü™ô –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–Ω–µ—Ç:', coinsChange);
  console.log('‚ö° –ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏:', energyChange);

  // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API /auth/user
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API /auth/user...');
  
  try {
    const response = await fetch('http://localhost:8000/api/auth/user', {
      credentials: 'include',
      headers: {
        'Cookie': 'connect.sid=s%3A111907067370663926621.abc123' // –ü—Ä–∏–º–µ—Ä cookie
      }
    });

    if (response.ok) {
      const apiUser = await response.json();
      console.log('‚úÖ API /auth/user –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ API:', apiUser.balance);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ API:', apiUser.coins);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ API:', apiUser.energyTasksBonus);

      // –°—Ä–∞–≤–Ω–∏–º —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ë–î
      const apiBalanceMatch = apiUser.balance === userAfter[0].balance;
      const apiCoinsMatch = apiUser.coins === userAfter[0].coins;
      const apiEnergyMatch = apiUser.energyTasksBonus === userAfter[0].energyTasksBonus;

      console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ API —Å –ë–î:');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', apiBalanceMatch);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç:', apiCoinsMatch);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', apiEnergyMatch);

      if (apiBalanceMatch && apiCoinsMatch && apiEnergyMatch) {
        console.log('\n‚úÖ API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('\n‚ùå API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ!');
      }
    } else {
      console.log('‚ùå API /auth/user –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', response.status, response.statusText);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API /auth/user:', error);
  }
}

testApiUserEndpoint().catch(console.error); 