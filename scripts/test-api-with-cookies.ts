import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function testApiWithCookies() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å cookies...\n');

  // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID –∏–∑ –ª–æ–≥–æ–≤
  const userId = '111907067370663926621';
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
  const userFromDb = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  if (!userFromDb.length) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
    return;
  }

  console.log('üìä –î–∞–Ω–Ω—ã–µ –≤ –ë–î:');
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î:', userFromDb[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î:', userFromDb[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î:', userFromDb[0].energyTasksBonus);

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API /auth/user —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API /auth/user —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...');
  
  try {
    // –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ (–∫–∞–∫ –¥–µ–ª–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
    const response = await fetch('http://localhost:5173/api/auth/user', {
      credentials: 'include'
    });

    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    console.log('üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', Object.fromEntries(response.headers.entries()));

    if (response.ok) {
      const apiUser = await response.json();
      console.log('‚úÖ API /auth/user –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ API:', apiUser.balance);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ API:', apiUser.coins);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ API:', apiUser.energyTasksBonus);

      // –°—Ä–∞–≤–Ω–∏–º —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –ë–î
      const balanceMatch = apiUser.balance === userFromDb[0].balance;
      const coinsMatch = apiUser.coins === userFromDb[0].coins;
      const energyMatch = apiUser.energyTasksBonus === userFromDb[0].energyTasksBonus;

      console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ API —Å –ë–î:');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', balanceMatch);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç:', coinsMatch);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç:', energyMatch);

      if (balanceMatch && coinsMatch && energyMatch) {
        console.log('\n‚úÖ API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
      } else {
        console.log('\n‚ùå API /auth/user –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ!');
      }
    } else {
      console.log('‚ùå API /auth/user –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', response.status, response.statusText);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
      try {
        const errorText = await response.text();
        console.log('üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
      } catch (e) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏');
      }
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API /auth/user:', error);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –Ω–∞–ø—Ä—è–º—É—é (–±–µ–∑ –ø—Ä–æ–∫—Å–∏)
  console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API /auth/user –Ω–∞–ø—Ä—è–º—É—é...');
  
  try {
    const response = await fetch('http://localhost:8000/api/auth/user', {
      credentials: 'include'
    });

    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ (–ø—Ä—è–º–æ–π):', response.status);

    if (response.ok) {
      const apiUser = await response.json();
      console.log('‚úÖ API /auth/user –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ (–ø—Ä—è–º–æ–π)');
      console.log('üí∞ –ë–∞–ª–∞–Ω—Å –∏–∑ API:', apiUser.balance);
      console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –∏–∑ API:', apiUser.coins);
      console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –∏–∑ API:', apiUser.energyTasksBonus);
    } else {
      console.log('‚ùå API /auth/user –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (–ø—Ä—è–º–æ–π):', response.status, response.statusText);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—Ä–æ—Å–µ –∫ API /auth/user:', error);
  }
}

testApiWithCookies().catch(console.error); 