import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function testAuthSession() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    const user = await db
      .select({ 
        id: users.id,
        email: users.email,
        energyTasksBonus: users.energyTasksBonus,
        balance: users.balance
      })
      .from(users)
      .where(eq(users.email, 'exsiseprogram@gmail.com'))
      .limit(1);

    if (!user.length) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î');
      return;
    }

    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î:');
    console.log('  ID:', user[0].id);
    console.log('  Email:', user[0].email);
    console.log('  –≠–Ω–µ—Ä–≥–∏—è:', user[0].energyTasksBonus);
    console.log('  –ë–∞–ª–∞–Ω—Å:', user[0].balance);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API /auth/user –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    try {
      const response = await fetch('http://localhost:8000/api/auth/user', {
        credentials: 'include',
      });
      
      console.log('  –°—Ç–∞—Ç—É—Å:', response.status);
      if (response.ok) {
        const data = await response.json();
        console.log('  –î–∞–Ω–Ω—ã–µ:', data);
      } else {
        const error = await response.text();
        console.log('  –û—à–∏–±–∫–∞:', error);
      }
    } catch (error) {
      console.log('  –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Å—Å–∏–µ–π
    console.log('\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API /auth/user —Å –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Å—Å–∏–µ–π...');
    try {
      const response = await fetch('http://localhost:8000/api/auth/user', {
        credentials: 'include',
        headers: {
          'Cookie': `connect.sid=s%3A${user[0].id}.test123`
        }
      });
      
      console.log('  –°—Ç–∞—Ç—É—Å:', response.status);
      if (response.ok) {
        const data = await response.json();
        console.log('  –î–∞–Ω–Ω—ã–µ:', data);
      } else {
        const error = await response.text();
        console.log('  –û—à–∏–±–∫–∞:', error);
      }
    } catch (error) {
      console.log('  –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)
    console.log('\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API /auth/user —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...');
    try {
      const response = await fetch('/api/auth/user', {
        credentials: 'include',
      });
      
      console.log('  –°—Ç–∞—Ç—É—Å:', response.status);
      if (response.ok) {
        const data = await response.json();
        console.log('  –î–∞–Ω–Ω—ã–µ:', data);
      } else {
        const error = await response.text();
        console.log('  –û—à–∏–±–∫–∞:', error);
      }
    } catch (error) {
      console.log('  –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testAuthSession(); 