import { db } from '../server/db';
import { userTasks } from '../shared/schema';
import { eq, and } from 'drizzle-orm';
import { dealsService } from '../server/services/dealsService';
import { unifiedPriceService } from '../server/services/unifiedPriceService';

const userId = '111907067370663926621';

async function testCryptoKingTasks() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏—è "–ö—Ä–∏–ø—Ç–æ –∫–æ—Ä–æ–ª—å" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è "–ö—Ä–∏–ø—Ç–æ –∫–æ—Ä–æ–ª—å"
    const cryptoKingTasks = await db.select()
      .from(userTasks)
      .where(
        and(
          eq(userTasks.userId, userId),
          eq(userTasks.taskType, 'crypto_king'),
          eq(userTasks.status, 'active')
        )
      );

    console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π "–ö—Ä–∏–ø—Ç–æ –∫–æ—Ä–æ–ª—å": ${cryptoKingTasks.length}`);
    
    if (cryptoKingTasks.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π "–ö—Ä–∏–ø—Ç–æ –∫–æ—Ä–æ–ª—å"');
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    for (const task of cryptoKingTasks) {
      console.log(`\nüéØ –ó–∞–¥–∞–Ω–∏–µ ID: ${task.id}`);
      console.log(`   - –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${task.title}`);
      console.log(`   - –ü—Ä–æ–≥—Ä–µ—Å—Å: ${task.progressCurrent}/${task.progressTotal}`);
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${task.status}`);
      console.log(`   - –°–æ–∑–¥–∞–Ω–æ: ${task.createdAt}`);
      
      // 1) –ü—Ä—è–º–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –ø—Ä–∏–±—ã–ª–∏ –∑–∞–¥–∞–Ω–∏—è (—é–Ω–∏—Ç-—Ç–µ—Å—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä—ã–Ω–∫–∞)
      console.log('   - –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –≤ –∑–∞–¥–∞–Ω–∏–µ: +150, –∑–∞—Ç–µ–º +900');
      await dealsService.updateCryptoKingTasks(userId, 150);
      await dealsService.updateCryptoKingTasks(userId, 900); // —Å—É–º–º–∞—Ä–Ω–æ 1050, –¥–æ–ª–∂–Ω–æ –∫–∞–ø–Ω—É—Ç—å—Å—è –≤ 1000
      console.log('   - –°–∏–º—É–ª—è—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

      // 2) –¢–∞–∫–∂–µ –æ—Ç–∫—Ä–æ–µ–º –∏ –∑–∞–∫—Ä–æ–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å–¥–µ–ª–∫—É (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π), –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–≥–æ–Ω
      console.log('   - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å–¥–µ–ª–∫—É –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ª–æ–≥–∞...');
      const symbol = 'BTCUSDT';
      await unifiedPriceService.addPair(symbol);
      const open = await dealsService.openDeal({
        userId,
        symbol,
        direction: 'up',
        amount: 50,
        multiplier: 5
      });
      await new Promise(r => setTimeout(r, 1000));
      const res = await dealsService.closeDeal({ userId, dealId: open.id });
      console.log(`   - –†–µ–∞–ª—å–Ω–∞—è —Å–¥–µ–ª–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞, –ø—Ä–∏–±—ã–ª—å: ${res.profit}`);
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    const allTasks = await db.select()
      .from(userTasks)
      .where(eq(userTasks.userId, userId));

    console.log(`\nüìã –í—Å–µ–≥–æ –∑–∞–¥–∞–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${allTasks.length}`);
    
    const activeTasks = allTasks.filter(task => task.status === 'active');
    console.log(`üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: ${activeTasks.length}`);
    
    activeTasks.forEach(task => {
      console.log(`   - ${task.title}: ${task.progressCurrent}/${task.progressTotal} (${task.taskType})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–¥–∞–Ω–∏–π:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCryptoKingTasks()
  .then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error);
    process.exit(1);
  }); 