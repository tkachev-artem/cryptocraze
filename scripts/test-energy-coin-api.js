const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:8000';

async function testEnergyCoinAPI() {
  console.log('üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π —Å —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –º–æ–Ω–µ—Ç–∞–º–∏...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
    console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤...');
    try {
      const response = await fetch(`${BASE_URL}/api/tasks/templates/energy`);
      const data = await response.json();
      
      if (response.ok) {
        console.log('‚úÖ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã');
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data.templates.length}`);
        data.templates.forEach(template => {
          console.log(`   - ${template.title}: ${template.rewardAmount} ${template.rewardType}`);
        });
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤:', data.error);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
    console.log('\nüìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤...');
    try {
      const response = await fetch(`${BASE_URL}/api/tasks/templates/crypto`);
      const data = await response.json();
      
      if (response.ok) {
        console.log('‚úÖ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã');
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data.templates.length}`);
        data.templates.forEach(template => {
          console.log(`   - ${template.title}: ${template.rewardAmount} ${template.rewardType}`);
        });
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤:', data.error);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏
    console.log('\nüìã –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏...');
    try {
      const response = await fetch(`${BASE_URL}/api/tasks/templates/energy-rewards`);
      const data = await response.json();
      
      if (response.ok) {
        console.log('‚úÖ –®–∞–±–ª–æ–Ω—ã —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –ø–æ–ª—É—á–µ–Ω—ã');
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data.templates.length}`);
        data.templates.slice(0, 5).forEach(template => {
          console.log(`   - ${template.title} (${template.category}): ${template.rewardAmount} —ç–Ω–µ—Ä–≥–∏–∏`);
        });
        if (data.templates.length > 5) {
          console.log(`   ... –∏ –µ—â–µ ${data.templates.length - 5} —à–∞–±–ª–æ–Ω–æ–≤`);
        }
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏:', data.error);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }

    // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö
    console.log('\nüìã –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö...');
    try {
      const response = await fetch(`${BASE_URL}/api/tasks/templates/coin-rewards`);
      const data = await response.json();
      
      if (response.ok) {
        console.log('‚úÖ –®–∞–±–ª–æ–Ω—ã —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö –ø–æ–ª—É—á–µ–Ω—ã');
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${data.templates.length}`);
        data.templates.slice(0, 5).forEach(template => {
          console.log(`   - ${template.title} (${template.category}): ${template.rewardAmount} –º–æ–Ω–µ—Ç`);
        });
        if (data.templates.length > 5) {
          console.log(`   ... –∏ –µ—â–µ ${data.templates.length - 5} —à–∞–±–ª–æ–Ω–æ–≤`);
        }
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö:', data.error);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testEnergyCoinAPI().catch(console.error); 