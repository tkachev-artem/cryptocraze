import { TaskService } from '../server/services/taskService';
import { TaskTemplateService } from '../server/services/taskTemplates';
import { EnergyService } from '../server/services/energyService';
import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';

const TEST_USER_ID = 'test-user-energy-coin';

async function createTestUser() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await db.select()
      .from(users)
      .where(eq(users.id, TEST_USER_ID))
      .limit(1);

    if (existingUser.length === 0) {
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await db.insert(users).values({
        id: TEST_USER_ID,
        email: 'test-energy-coin@example.com',
        firstName: 'Test',
        lastName: 'EnergyCoin',
        balance: '10000.00',
        coins: 100,
        freeBalance: '0',
        ratingScore: 0,
        tradesCount: 0,
        totalTradesVolume: '0.00',
        successfulTradesPercentage: '0.00',
        maxProfit: '0.00',
        maxLoss: '0.00',
        averageTradeAmount: '0.00',
        rewardsCount: 0,
        energyTasksBonus: 0,
        isPremium: false
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

async function testEnergyAndCoinTasks() {
  console.log('üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π —Å —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –º–æ–Ω–µ—Ç–∞–º–∏...\n');

  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await createTestUser();

    // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã
    console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã...');
    const energyTemplates = TaskTemplateService.getEnergyTemplates();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${energyTemplates.length}`);
    energyTemplates.forEach(template => {
      console.log(`   - ${template.title}: ${template.rewardAmount} —ç–Ω–µ—Ä–≥–∏–∏`);
    });

    // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    console.log('\nüìã –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã...');
    const cryptoTemplates = TaskTemplateService.getCryptoTemplates();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${cryptoTemplates.length}`);
    cryptoTemplates.forEach(template => {
      console.log(`   - ${template.title}: ${template.rewardAmount} ${template.rewardType}`);
    });

    // –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏
    console.log('\nüìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏...');
    const energyRewardTemplates = TaskTemplateService.getEnergyRewardTemplates();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –Ω–∞–≥—Ä–∞–¥–∞–º–∏: ${energyRewardTemplates.length}`);
    energyRewardTemplates.forEach(template => {
      console.log(`   - ${template.title} (${template.category}): ${template.rewardAmount} —ç–Ω–µ—Ä–≥–∏–∏`);
    });

    // –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö
    console.log('\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö...');
    const coinRewardTemplates = TaskTemplateService.getCoinRewardTemplates();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ —Å –Ω–∞–≥—Ä–∞–¥–∞–º–∏ –≤ –º–æ–Ω–µ—Ç–∞—Ö: ${coinRewardTemplates.length}`);
    coinRewardTemplates.forEach(template => {
      console.log(`   - ${template.title} (${template.category}): ${template.rewardAmount} –º–æ–Ω–µ—Ç`);
    });

    // –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ
    console.log('\nüìã –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ...');
    const energyTask = await TaskService.createTaskByCategory(TEST_USER_ID, 'energy');
    if (energyTask) {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${energyTask.title} (ID: ${energyTask.id})`);
      console.log(`   –ù–∞–≥—Ä–∞–¥–∞: ${energyTask.reward.amount} ${energyTask.reward.type}`);
      console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${energyTask.progress.current}/${energyTask.progress.total}`);
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ');
    }

    // –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
    console.log('\nüìã –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ...');
    const cryptoTask = await TaskService.createTaskByCategory(TEST_USER_ID, 'crypto');
    if (cryptoTask) {
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${cryptoTask.title} (ID: ${cryptoTask.id})`);
      console.log(`   –ù–∞–≥—Ä–∞–¥–∞: ${cryptoTask.reward.amount} ${cryptoTask.reward.type}`);
      console.log(`   –ü—Ä–æ–≥—Ä–µ—Å—Å: ${cryptoTask.progress.current}/${cryptoTask.progress.total}`);
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ');
    }

    // –®–∞–≥ 7: –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìã –®–∞–≥ 7: –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userTasks = await TaskService.getUserTasks(TEST_USER_ID);
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: ${userTasks.length}`);
    userTasks.forEach(task => {
      console.log(`   - ${task.title}: ${task.reward.amount} ${task.reward.type}`);
    });

    // –®–∞–≥ 8: –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    if (energyTask) {
      console.log('\nüìã –®–∞–≥ 8: –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è...');
      const taskId = parseInt(energyTask.id);
      const progressResult = await TaskService.updateTaskProgress(taskId, TEST_USER_ID, energyTask.progress.total);
      
      if (progressResult) {
        console.log(`‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${progressResult.task.title}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${progressResult.task.status}`);
        if (progressResult.newTask) {
          console.log(`   –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${progressResult.newTask.title}`);
        }
      } else {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏—è');
      }
    }

    // –®–∞–≥ 9: –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìã –®–∞–≥ 9: –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const energyProgress = await EnergyService.getProgress(TEST_USER_ID);
    console.log(`‚úÖ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${energyProgress}%`);

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testEnergyAndCoinTasks().catch(console.error); 