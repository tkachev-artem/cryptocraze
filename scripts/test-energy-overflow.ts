import { EnergyService } from '../server/services/energyService';
import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';

const TEST_USER_ID = 'test-user-energy';

async function createTestUser() {
  try {
    const existingUser = await db.select()
      .from(users)
      .where(eq(users.id, TEST_USER_ID))
      .limit(1);

    if (existingUser.length === 0) {
      await db.insert(users).values({
        id: TEST_USER_ID,
        email: 'test-energy@example.com',
        firstName: 'Test',
        lastName: 'Energy',
        balance: '10000.00',
        coins: 100,
        freeBalance: '0',
        ratingScore: 0,
        tradesCount: 0,
        totalTradesVolume: '0.00',
        successfulTradesPercentage: '0.00',
        maxProfit: '0.00',
        maxLoss: '0.00',
        averageTradeAmount: '0.00',
        rewardsCount: 0,
        energyTasksBonus: 0,
        isPremium: false
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

async function testEnergyOverflow() {
  console.log('‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏...\n');

  try {
    await createTestUser();

    // –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏
    console.log('üìã –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏');
    await EnergyService.resetProgress(TEST_USER_ID);
    let result = await EnergyService.addEnergy(TEST_USER_ID, 30);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 30 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ 100%
    console.log('\nüìã –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ 100%');
    result = await EnergyService.addEnergy(TEST_USER_ID, 70);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 70 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (90 + 15 = 105, –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è 5)
    console.log('\nüìã –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (90 + 15 = 105)');
    await EnergyService.setProgress(TEST_USER_ID, 90);
    result = await EnergyService.addEnergy(TEST_USER_ID, 15);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 15 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –¢–µ—Å—Ç 4: –ë–æ–ª—å—à–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (5 + 200 = 205, –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è 5)
    console.log('\nüìã –¢–µ—Å—Ç 4: –ë–æ–ª—å—à–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (5 + 200 = 205)');
    result = await EnergyService.addEnergy(TEST_USER_ID, 200);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 200 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –¢–µ—Å—Ç 5: –¢–æ—á–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 100%
    console.log('\nüìã –¢–µ—Å—Ç 5: –¢–æ—á–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 100%');
    await EnergyService.setProgress(TEST_USER_ID, 95);
    result = await EnergyService.addEnergy(TEST_USER_ID, 5);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 5 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –¢–µ—Å—Ç 6: –ù–µ–±–æ–ª—å—à–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (0 + 25 = 25)
    console.log('\nüìã –¢–µ—Å—Ç 6: –ù–µ–±–æ–ª—å—à–æ–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ (0 + 25 = 25)');
    await EnergyService.resetProgress(TEST_USER_ID);
    result = await EnergyService.addEnergy(TEST_USER_ID, 25);
    console.log(`   –î–æ–±–∞–≤–ª–µ–Ω–æ 25 —ç–Ω–µ—Ä–≥–∏–∏: –ø—Ä–æ–≥—Ä–µ—Å—Å = ${result.newProgress}, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ = ${result.completedTasks}`);

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüìã –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞');
    const finalProgress = await EnergyService.getProgress(TEST_USER_ID);
    console.log(`   –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å —ç–Ω–µ—Ä–≥–∏–∏: ${finalProgress}%`);

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testEnergyOverflow().catch(console.error); 