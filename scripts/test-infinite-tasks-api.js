const fetch = require('node-fetch');

const API_BASE = 'http://localhost:8000';

// –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç —á–µ—Ä–µ–∑ OAuth)
const mockSession = {
  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∫—É–∫–∏ —Å–µ—Å—Å–∏–∏
};

const testInfiniteTasksAPI = async () => {
  console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π...\n');
  
  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º)
    console.log('üìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞–Ω–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º...');
    const tasksResponse = await fetch(`${API_BASE}/api/tasks`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': 'session=your-session-cookie' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
      }
    });
    
    if (!tasksResponse.ok) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π: ${tasksResponse.status}`);
      console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');
      return;
    }
    
    const tasksData = await tasksResponse.json();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: ${tasksData.tasks.length}`);
    
    if (tasksData.createdTasks) {
      console.log(`üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π: ${tasksData.createdTasks.length}`);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
    tasksData.tasks.forEach((task, index) => {
      console.log(`   ${index + 1}. ID: ${task.id} - ${task.title}`);
      console.log(`      –ü—Ä–æ–≥—Ä–µ—Å—Å: ${task.progress.current}/${task.progress.total}`);
      console.log(`      –ù–∞–≥—Ä–∞–¥–∞: ${task.reward.amount} ${task.reward.type}`);
    });
    
    // –®–∞–≥ 2: –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
    if (tasksData.tasks.length > 0) {
      console.log('\nüìã –®–∞–≥ 2: –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ...');
      const firstTask = tasksData.tasks[0];
      console.log(`–ó–∞–≤–µ—Ä—à–∞–µ–º: ${firstTask.title} (ID: ${firstTask.id})`);
      
      const progressResponse = await fetch(`${API_BASE}/api/tasks/${firstTask.id}/progress`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Cookie': 'session=your-session-cookie' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
        },
        body: JSON.stringify({
          progress: firstTask.progress.total
        })
      });
      
      if (!progressResponse.ok) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${progressResponse.status}`);
        return;
      }
      
      const progressData = await progressResponse.json();
      console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      console.log(`–°—Ç–∞—Ç—É—Å: ${progressData.task.status}`);
      
      if (progressData.newTask) {
        console.log('üéâ –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!');
        console.log(`–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${progressData.newTask.title} (ID: ${progressData.newTask.id})`);
        console.log(`–ü—Ä–æ–≥—Ä–µ—Å—Å: ${progressData.newTask.progress.current}/${progressData.newTask.progress.total}`);
        console.log(`–ù–∞–≥—Ä–∞–¥–∞: ${progressData.newTask.reward.amount} ${progressData.newTask.reward.type}`);
      }
    }
    
    // –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    console.log('\nüìã –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ...');
    const refillResponse = await fetch(`${API_BASE}/api/tasks/auto-refill`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': 'session=your-session-cookie' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
      }
    });
    
    if (!refillResponse.ok) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: ${refillResponse.status}`);
      return;
    }
    
    const refillData = await refillResponse.json();
    console.log(`‚úÖ ${refillData.message}`);
    
    if (refillData.createdTasks) {
      console.log(`–°–æ–∑–¥–∞–Ω–æ –∑–∞–¥–∞–Ω–∏–π: ${refillData.createdTasks.length}`);
      refillData.createdTasks.forEach((task, index) => {
        console.log(`   ${index + 1}. ${task.title} (ID: ${task.id})`);
      });
    }
    
    // –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüìã –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
    const finalResponse = await fetch(`${API_BASE}/api/tasks`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': 'session=your-session-cookie' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é
      }
    });
    
    const finalData = await finalResponse.json();
    console.log(`–§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: ${finalData.tasks.length}`);
    
    finalData.tasks.forEach((task, index) => {
      console.log(`   ${index + 1}. ID: ${task.id} - ${task.title}`);
      console.log(`      –ü—Ä–æ–≥—Ä–µ—Å—Å: ${task.progress.current}/${task.progress.total}`);
      console.log(`      –ù–∞–≥—Ä–∞–¥–∞: ${task.reward.amount} ${task.reward.type}`);
    });
    
    console.log('\nüéâ API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì± –°–∏—Å—Ç–µ–º–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —á–µ—Ä–µ–∑ API');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
    console.log('   1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000');
    console.log('   2. –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ Google OAuth');
    console.log('   3. –ó–∞–º–µ–Ω–∏—Ç–µ "your-session-cookie" –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é');
  }
};

// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
console.log('üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é API:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev');
console.log('2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ Google OAuth');
console.log('3. –ü–æ–ª—É—á–∏—Ç–µ –∫—É–∫–∏ —Å–µ—Å—Å–∏–∏ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞');
console.log('4. –ó–∞–º–µ–Ω–∏—Ç–µ "your-session-cookie" –≤ —Å–∫—Ä–∏–ø—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∫—É–∫–∏');
console.log('5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/test-infinite-tasks-api.js\n');

testInfiniteTasksAPI(); 