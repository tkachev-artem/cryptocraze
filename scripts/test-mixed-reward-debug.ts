import { db } from '../server/db';
import { userTasks, users } from '../shared/schema';
import { eq, and } from 'drizzle-orm';
import { TaskService } from '../server/services/taskService';

async function testMixedRewardDebug() {
  console.log('üß™ –û—Ç–ª–∞–¥–∫–∞ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥...\n');

  // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID –∏–∑ –ª–æ–≥–æ–≤
  const userId = '111907067370663926621';
  console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const userBefore = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  if (!userBefore.length) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î –¥–æ:', userBefore[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î –¥–æ:', userBefore[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î –¥–æ:', userBefore[0].energyTasksBonus);

  // –ù–∞–π–¥–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ
  const mixedTask = await db.select()
    .from(userTasks)
    .where(
      and(
        eq(userTasks.userId, userId),
        eq(userTasks.status, 'active'),
        eq(userTasks.rewardType, 'mixed')
      )
    )
    .limit(1);

  if (!mixedTask.length) {
    console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–º–µ—à–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π');
    return;
  }

  const task = mixedTask[0];
  console.log(`\nüìù –ù–∞–π–¥–µ–Ω–æ —Å–º–µ—à–∞–Ω–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: ${task.title}`);
  console.log(`üéÅ –ù–∞–≥—Ä–∞–¥–∞: ${task.rewardAmount} ${task.rewardType}`);

  // –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –Ω–∞–≥—Ä–∞–¥—ã
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –Ω–∞–≥—Ä–∞–¥—ã...');
  const rewardAmount = task.rewardAmount;
  
  if (rewardAmount.includes('_energy_')) {
    const parts = rewardAmount.split('_');
    console.log('üìä –ß–∞—Å—Ç–∏ –Ω–∞–≥—Ä–∞–¥—ã:', parts);
    
    const energyAmount = parseInt(parts[0]);
    console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è:', energyAmount);
    
    const afterEnergy = parts.slice(2).join('_');
    console.log('üìä –ü–æ—Å–ª–µ —ç–Ω–µ—Ä–≥–∏–∏:', afterEnergy);
    
    if (afterEnergy.includes('_money')) {
      console.log('üí∞ –¢–∏–ø: –¥–µ–Ω—å–≥–∏');
      const moneyAmount = afterEnergy.split('_')[0];
      console.log('üí∞ –°—É–º–º–∞ –¥–µ–Ω–µ–≥:', moneyAmount);
    } else if (afterEnergy.includes('_coins')) {
      console.log('ü™ô –¢–∏–ø: –º–æ–Ω–µ—Ç—ã');
      const coinAmount = afterEnergy.split('_')[0];
      console.log('ü™ô –°—É–º–º–∞ –º–æ–Ω–µ—Ç:', coinAmount);
    } else {
      console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø:', afterEnergy);
    }
  }

  // –í—ã–ø–æ–ª–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ
  console.log('\nüèÉ –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞–Ω–∏–µ...');
  
  const result = await TaskService.updateTaskProgress(task.id, userId, task.progressTotal);
  
  if (!result) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ');
    return;
  }

  console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');

  // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const userAfter = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  console.log('\nüìä –î–∞–Ω–Ω—ã–µ –≤ –ë–î –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:');
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤ –ë–î –ø–æ—Å–ª–µ:', userAfter[0].energyTasksBonus);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
  const balanceChange = parseFloat(userAfter[0].balance || '0') - parseFloat(userBefore[0].balance || '0');
  const coinsChange = (userAfter[0].coins || 0) - (userBefore[0].coins || 0);
  const energyChange = (userAfter[0].energyTasksBonus || 0) - (userBefore[0].energyTasksBonus || 0);

  console.log('\nüìà –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î:');
  console.log('üí∞ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:', balanceChange);
  console.log('ü™ô –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–Ω–µ—Ç:', coinsChange);
  console.log('‚ö° –ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏:', energyChange);

  // –û–ø—Ä–µ–¥–µ–ª–∏–º –æ–∂–∏–¥–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–≥—Ä–∞–¥—ã
  const expectedCoins = 1000;
  const expectedEnergy = 15;
  const expectedMoney = 0;

  console.log('\nüéØ –û–∂–∏–¥–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:');
  console.log('üí∞ –û–∂–∏–¥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:', expectedMoney);
  console.log('ü™ô –û–∂–∏–¥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–Ω–µ—Ç:', expectedCoins);
  console.log('‚ö° –û–∂–∏–¥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏:', expectedEnergy);

  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const isCorrect = (expectedMoney === 0 || Math.abs(balanceChange - expectedMoney) < 0.01) &&
                   (expectedCoins === 0 || coinsChange === expectedCoins) &&
                   energyChange === expectedEnergy;

  if (isCorrect) {
    console.log('\n‚úÖ –°–º–µ—à–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  } else {
    console.log('\n‚ùå –°–º–µ—à–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    
    if (balanceChange !== expectedMoney) {
      console.log(`‚ùå –ë–∞–ª–∞–Ω—Å: –æ–∂–∏–¥–∞–ª–æ—Å—å ${expectedMoney}, –ø–æ–ª—É—á–µ–Ω–æ ${balanceChange}`);
    }
    if (coinsChange !== expectedCoins) {
      console.log(`‚ùå –ú–æ–Ω–µ—Ç—ã: –æ–∂–∏–¥–∞–ª–æ—Å—å ${expectedCoins}, –ø–æ–ª—É—á–µ–Ω–æ ${coinsChange}`);
    }
    if (energyChange !== expectedEnergy) {
      console.log(`‚ùå –≠–Ω–µ—Ä–≥–∏—è: –æ–∂–∏–¥–∞–ª–æ—Å—å ${expectedEnergy}, –ø–æ–ª—É—á–µ–Ω–æ ${energyChange}`);
    }
  }
}

testMixedRewardDebug().catch(console.error); 