import { db } from '../server/db';
import { userTasks, users } from '../shared/schema';
import { eq } from 'drizzle-orm';
import { TaskService } from '../server/services/taskService';

async function testMixedRewards() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥...\n');

  // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const testUser = await db.select().from(users).limit(1);
  if (!testUser.length) {
    console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }

  const userId = testUser[0].id;
  console.log(`üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${userId}`);

  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userBefore = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –¥–æ:', userBefore[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –¥–æ:', userBefore[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –¥–æ:', userBefore[0].energyTasksBonus);

  // –°–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å —Å–º–µ—à–∞–Ω–Ω–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π
  console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å –Ω–∞–≥—Ä–∞–¥–æ–π 15 —ç–Ω–µ—Ä–≥–∏–∏ + 1K –º–æ–Ω–µ—Ç...');
  
  const testTask = await TaskService.createTask(userId, {
    taskType: 'test_mixed',
    title: '–¢–µ—Å—Ç —Å–º–µ—à–∞–Ω–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã',
    description: '–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥',
    rewardType: 'mixed',
    rewardAmount: '15_energy_1K_coins',
    progressTotal: 1,
    icon: '/trials/test.svg',
    expiresInHours: 1
  });

  if (!testTask) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ');
    return;
  }

  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', testTask.id);
  console.log('üéÅ –¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã:', testTask.reward.type);
  console.log('üéÅ –°—É–º–º–∞ –Ω–∞–≥—Ä–∞–¥—ã:', testTask.reward.amount);

  // –í—ã–ø–æ–ª–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ
  console.log('\nüèÉ –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–¥–∞–Ω–∏–µ...');
  
  const result = await TaskService.updateTaskProgress(parseInt(testTask.id), userId, 1);
  
  if (!result) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ');
    return;
  }

  console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!');
  console.log('üéÅ –ù–∞–≥—Ä–∞–¥–∞ –≤—ã–¥–∞–Ω–∞:', result.task.reward.type, result.task.reward.amount);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userAfter = await db.select().from(users).where(eq(users.id, userId)).limit(1);
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log('üí∞ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ:', userAfter[0].balance);
  console.log('ü™ô –ú–æ–Ω–µ—Ç—ã –ø–æ—Å–ª–µ:', userAfter[0].coins);
  console.log('‚ö° –≠–Ω–µ—Ä–≥–∏—è –ø–æ—Å–ª–µ:', userAfter[0].energyTasksBonus);

  // –ü—Ä–æ–≤–µ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  const balanceChange = parseFloat(userAfter[0].balance || '0') - parseFloat(userBefore[0].balance || '0');
  const coinsChange = (userAfter[0].coins || 0) - (userBefore[0].coins || 0);
  const energyChange = (userAfter[0].energyTasksBonus || 0) - (userBefore[0].energyTasksBonus || 0);

  console.log('\nüìà –ò–∑–º–µ–Ω–µ–Ω–∏—è:');
  console.log('üí∞ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:', balanceChange);
  console.log('ü™ô –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–Ω–µ—Ç:', coinsChange);
  console.log('‚ö° –ò–∑–º–µ–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏:', energyChange);

  if (coinsChange === 1000 && energyChange === 15) {
    console.log('\n‚úÖ –°–º–µ—à–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  } else {
    console.log('\n‚ùå –°–º–µ—à–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    console.log('–û–∂–∏–¥–∞–ª–æ—Å—å: +1000 –º–æ–Ω–µ—Ç, +15 —ç–Ω–µ—Ä–≥–∏–∏');
    console.log('–ü–æ–ª—É—á–µ–Ω–æ:', `+${coinsChange} –º–æ–Ω–µ—Ç, +${energyChange} —ç–Ω–µ—Ä–≥–∏–∏`);
  }

  // –£–¥–∞–ª–∏–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
  await db.delete(userTasks).where(eq(userTasks.id, parseInt(testTask.id)));
  console.log('\nüßπ –¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testMixedRewards().catch(console.error); 