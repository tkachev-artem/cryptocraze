import { TaskTemplateService } from '../server/services/taskTemplates';

async function testRaritySystem() {
  console.log('üé≤ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–¥–∫–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏–π');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º getRandomTemplateByRarity() 100 —Ä–∞–∑
  const results: Record<string, number> = {};
  const rarityStats: Record<string, number> = {};
  
  console.log('\nüìä –ó–∞–ø—É—Å–∫ 100 –∏—Ç–µ—Ä–∞—Ü–∏–π getRandomTemplateByRarity():');
  
  for (let i = 0; i < 100; i++) {
    const template = TaskTemplateService.getRandomTemplateByRarity();
    
    // –°—á–∏—Ç–∞–µ–º –ø–æ ID —à–∞–±–ª–æ–Ω–∞
    if (!results[template.id]) {
      results[template.id] = 0;
    }
    results[template.id]++;
    
    // –°—á–∏—Ç–∞–µ–º –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
    if (!rarityStats[template.rarity]) {
      rarityStats[template.rarity] = 0;
    }
    rarityStats[template.rarity]++;
  }
  
  console.log('\nüèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ ID –∑–∞–¥–∞–Ω–∏–π:');
  Object.entries(results)
    .sort((a, b) => b[1] - a[1])
    .forEach(([id, count]) => {
      const template = TaskTemplateService.getTemplateById(id);
      console.log(`  ${id}: ${count} —Ä–∞–∑ (${template?.rarity || 'unknown'})`);
    });
  
  console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
  Object.entries(rarityStats)
    .sort((a, b) => b[1] - a[1])
    .forEach(([rarity, count]) => {
      const percentage = (count / 100 * 100).toFixed(1);
      console.log(`  ${rarity}: ${count} —Ä–∞–∑ (${percentage}%)`);
    });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ video_bonus_2
  const videoBonus2Count = results['video_bonus_2'] || 0;
  console.log(`\nüé∞ –ó–∞–¥–∞–Ω–∏–µ 'video_bonus_2' –≤—ã–ø–∞–ª–æ: ${videoBonus2Count} —Ä–∞–∑ –∏–∑ 100`);
  
  if (videoBonus2Count > 0) {
    console.log('‚úÖ –ó–∞–¥–∞–Ω–∏–µ —Å —Ä—É–ª–µ—Ç–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–¥–∫–æ—Å—Ç–∏!');
  } else {
    console.log('‚ö†Ô∏è  –ó–∞–¥–∞–Ω–∏–µ —Å —Ä—É–ª–µ—Ç–∫–æ–π –Ω–µ –≤—ã–ø–∞–ª–æ –Ω–∏ —Ä–∞–∑—É - –≤–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ä–µ–¥–∫–æ—Å—Ç–∏');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
  console.log('\nüìã –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:');
  const allTemplates = TaskTemplateService.getRandomTemplate(); // –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
  console.log('  –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ:');
  
  ['common', 'rare', 'epic', 'legendary'].forEach(rarity => {
    const templates = TaskTemplateService.getTemplatesByRarity(rarity as any);
    console.log(`    ${rarity}: ${templates.length} —à–∞–±–ª–æ–Ω–æ–≤`);
    templates.forEach(t => {
      console.log(`      - ${t.id}: ${t.title}`);
    });
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Å–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏
  console.log('\n‚öñÔ∏è  –û–∂–∏–¥–∞–µ–º—ã–µ –≤–µ—Å–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏:');
  console.log('  common: 60% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~60 –∏–∑ 100)');
  console.log('  rare: 25% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~25 –∏–∑ 100)');
  console.log('  epic: 12% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~12 –∏–∑ 100)');
  console.log('  legendary: 3% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å ~3 –∏–∑ 100)');
}

testRaritySystem().then(() => {
  console.log('\nüèÅ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ–¥–∫–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch(error => {
  console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  process.exit(1);
});