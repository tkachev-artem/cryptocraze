import { db } from '../server/db';
import { users } from '../shared/schema';
import { eq } from 'drizzle-orm';
import { PrizeService } from '../server/services/prizeService';

async function testRealUserBox() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await db
      .select({ 
        id: users.id,
        email: users.email,
        energyTasksBonus: users.energyTasksBonus,
        balance: users.balance
      })
      .from(users)
      .where(eq(users.email, 'exsiseprogram@gmail.com'))
      .limit(1);

    if (!user.length) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
    console.log('  ID:', user[0].id);
    console.log('  Email:', user[0].email);
    console.log('  –≠–Ω–µ—Ä–≥–∏—è –¥–æ:', user[0].energyTasksBonus);
    console.log('  –ë–∞–ª–∞–Ω—Å –¥–æ:', user[0].balance);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —ç–Ω–µ—Ä–≥–∏–∏
    const requiredEnergy = await PrizeService.getRequiredEnergy('red');
    console.log('üìã –¢—Ä–µ–±—É–µ—Ç—Å—è —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –∫—Ä–∞—Å–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏:', requiredEnergy);

    if ((user[0].energyTasksBonus || 0) < requiredEnergy) {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏');
      return;
    }

    console.log('üéÅ –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫—Ä–∞—Å–Ω—É—é –∫–æ—Ä–æ–±–∫—É...');
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–æ–±–∫—É
    const result = await PrizeService.openBox(user[0].id, 'red');
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è:');
    console.log('  –ü—Ä–∏–∑:', result.prize.prizeType === 'pro' ? `PRO ${result.prize.proDays} –¥–Ω–µ–π` : `$${result.prize.amount}`);
    console.log('  –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏:', result.energySpent);
    console.log('  –ü–æ–ª—É—á–µ–Ω–æ –¥–µ–Ω–µ–≥:', result.balanceUpdate);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const updatedUser = await db
      .select({ 
        energyTasksBonus: users.energyTasksBonus,
        balance: users.balance
      })
      .from(users)
      .where(eq(users.id, user[0].id))
      .limit(1);

    console.log('üîã –î–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è:');
    console.log('  –≠–Ω–µ—Ä–≥–∏—è –ø–æ—Å–ª–µ:', updatedUser[0]?.energyTasksBonus);
    console.log('  –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ:', updatedUser[0]?.balance);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–Ω–µ—Ä–≥–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã—á—Ç–µ–Ω–∞
    const expectedEnergy = (user[0].energyTasksBonus || 0) - requiredEnergy;
    if (updatedUser[0]?.energyTasksBonus === expectedEnergy) {
      console.log('‚úÖ –≠–Ω–µ—Ä–≥–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã—á—Ç–µ–Ω–∞!');
    } else {
      console.log('‚ùå –≠–Ω–µ—Ä–≥–∏—è –ù–ï –≤—ã—á—Ç–µ–Ω–∞!');
      console.log('  –û–∂–∏–¥–∞–ª–æ—Å—å:', expectedEnergy);
      console.log('  –ü–æ–ª—É—á–µ–Ω–æ:', updatedUser[0]?.energyTasksBonus);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

testRealUserBox(); 