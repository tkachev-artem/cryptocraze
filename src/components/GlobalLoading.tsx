import type { FC } from 'react';
import { useState, useEffect } from 'react';
import LoadingScreen from './LoadingScreen';

type GlobalLoadingProps = {
  children: React.ReactNode;
  minimumLoadingTime?: number;
}

// –¢–û–õ–¨–ö–û –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ - 43 —Ñ–∞–π–ª–∞
const CRITICAL_IMAGES = [
  // –î–ª—è /home
  '/panda.webp',
  '/avatar.webp',
  '/crown.webp',
  '/logo/logo.svg',
  '/vault.webp',
  '/money.svg',
  '/awards.svg',
  '/settings.svg',
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è (–Ω–∏–∂–Ω–µ–µ –º–µ–Ω—é)
  '/menu/active/home.svg',
  '/menu/active/trading.svg',
  '/menu/active/profile.svg',
  '/menu/active/rating.svg',
  '/menu/active/best.svg',
  '/menu/no-active/home.svg',
  '/menu/no-active/trading.svg',
  '/menu/no-active/profile.svg',
  '/menu/no-active/rating.svg',
  '/menu/no-active/best.svg',
  
  // –î–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
  '/rating/arrow-down.svg',
  '/rating/arrow-up.svg',
  '/rating/rating-bg.webp',
  '/rating/top-bg.webp',
  '/top-menu/back.svg',
  
  // –î–ª—è –ø—Ä–æ—Ñ–∏–ª—è
  '/avatar-big.svg',
  '/email.svg',
  '/phone.svg',
  '/dollar.svg',
  '/top-menu/edit.svg',
  '/ellipse.svg',
  '/top-menu/edit-light.svg',
  '/close.svg',
  '/accept.webp',
  
  // –î–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ /trade
  '/trade/wallet.svg',
  '/trade/money.svg',
  '/trade/trades.svg',
  '/top-menu/list.svg',
  '/dashboard/up.svg',
  '/dashboard/down.svg',
  '/deal/up.svg',
  '/deal/down.svg',
  '/trade/down-arrow.svg',
  '/dashboard/diamond.svg',
  '/dashboard/energy.svg'
];

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å Promise - –∑–∞–≥—Ä—É–∂–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3 —Å–µ–∫—É–Ω–¥—ã
const forcePreloadImages = (): Promise<void> => {
  return new Promise((resolve) => {
    let loadedCount = 0;
    let errorCount = 0;
    const totalImages = CRITICAL_IMAGES.length;
    
    if (totalImages === 0) {
      resolve();
      return;
    }
    
    // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    const timeout = setTimeout(() => {
      console.log(`‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${loadedCount}/${totalImages} –∑–∞–≥—Ä—É–∂–µ–Ω–æ, ${errorCount} –æ—à–∏–±–æ–∫`);
      resolve();
    }, 3000);
    
    const checkComplete = () => {
      loadedCount++;
      if (loadedCount >= totalImages) {
        clearTimeout(timeout);
        console.log(`‚úÖ –í—Å–µ ${totalImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã: ${totalImages - errorCount} –∑–∞–≥—Ä—É–∂–µ–Ω–æ, ${errorCount} –æ—à–∏–±–æ–∫`);
        resolve();
      }
    };
    
    CRITICAL_IMAGES.forEach((src) => {
      const img = new Image();
      
      img.onload = checkComplete;
      img.onerror = () => {
        errorCount++;
        console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: ${src}`);
        checkComplete(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      };
      
      img.src = src;
    });
  });
};

const GlobalLoading: FC<GlobalLoadingProps> = ({ 
  children, 
  minimumLoadingTime = 1500 
}) => {
  const [isInitialLoading, setIsInitialLoading] = useState(true);

  useEffect(() => {
    const loadImages = async () => {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      // –î–æ–±–∞–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ç–∞–π–º–∞—É—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      const [, ] = await Promise.all([
        Promise.race([
          forcePreloadImages(),
          new Promise(resolve => setTimeout(resolve, 5000)) // –º–∞–∫—Å–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥
        ]),
        new Promise(resolve => setTimeout(resolve, minimumLoadingTime))
      ]);
      
      console.log('‚úÖ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
      setIsInitialLoading(false);
    };

    loadImages();
  }, [minimumLoadingTime]);

  return (
    <>
      <LoadingScreen isLoading={isInitialLoading} />
      {!isInitialLoading && children}
    </>
  );
};

export default GlobalLoading; 