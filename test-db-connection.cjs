const { Client } = require('pg');

const hosts = [
  'crypto-db-1755991879.postgresql.yandexcloud.net',
  'rc1a-gxvs7rj7oqz9n7vp.mdb.yandexcloud.net',
  'rc1b-gxvs7rj7oqz9n7vp.mdb.yandexcloud.net',
  'rc1c-gxvs7rj7oqz9n7vp.mdb.yandexcloud.net',
  'c-crypto-db-1755991879.rw.mdb.yandexcloud.net',
  'crypto-db-1755991879.mdb.yandexcloud.net'
];

async function testConnection(host) {
  console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${host}`);
  
  const client = new Client({
    host: host,
    port: 6432,
    database: 'crypto_database',
    user: 'crypto_user',
    password: 'zAlBIauWxJ7JM3huObuew7LYG',
    ssl: { rejectUnauthorized: false },
    connectionTimeoutMillis: 5000,
  });

  try {
    await client.connect();
    const result = await client.query('SELECT version()');
    console.log(`‚úÖ –£–°–ü–ï–®–ù–û: ${host}`);
    console.log(`   PostgreSQL: ${result.rows[0].version.split(' ')[1]}`);
    await client.end();
    return host;
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞: ${host} - ${error.message}`);
    await client.end().catch(() => {});
    return null;
  }
}

async function findWorkingHost() {
  console.log('üöÄ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—á–µ–≥–æ —Ö–æ—Å—Ç–∞ PostgreSQL...\n');
  
  for (const host of hosts) {
    const working = await testConnection(host);
    if (working) {
      console.log(`\nüéâ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π —Ö–æ—Å—Ç: ${working}`);
      console.log(`üìù –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç DATABASE_URL:`);
      console.log(`DATABASE_URL=postgresql://crypto_user:zAlBIauWxJ7JM3huObuew7LYG@${working}:6432/crypto_database?sslmode=require`);
      return working;
    }
  }
  
  console.log('\n‚ùå –ù–∏ –æ–¥–∏–Ω —Ö–æ—Å—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å:');
  console.log('1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö (–∏–º—è –∫–ª–∞—Å—Ç–µ—Ä–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–∞—Ä–æ–ª—å)');
  console.log('2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏ –∏ —Ñ–∞–π—Ä–≤–æ–ª–∞ –≤ Yandex Cloud');
  console.log('3. –°—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Ç–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
}

findWorkingHost().catch(console.error);