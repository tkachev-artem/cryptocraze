import { createClient } from '@clickhouse/client';

async function testSyncInsert() {
  console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤—Å—Ç–∞–≤–∫—É –≤ ClickHouse...\n');

  const client = createClient({
    url: 'http://localhost:8123',
    database: 'cryptocraze_analytics',
    username: 'default',
    password: '',
    clickhouse_settings: {
      // –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      async_insert: 0,
      wait_for_async_insert: 0,
    }
  });

  try {
    // –¢–µ—Å—Ç –≤—Å—Ç–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è
    console.log('1Ô∏è‚É£ –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ...');
    await client.insert({
      table: 'user_events',
      values: [{
        event_id: 'test-event-sync-' + Date.now(),
        user_id: 888888,
        event_type: 'test_sync_login',
        event_data: JSON.stringify({ test: true, timestamp: new Date().toISOString() }),
        session_id: 'sync-test-session',
        timestamp: Math.floor(Date.now() / 1000)
      }],
      format: 'JSONEachRow'
    });
    console.log('   ‚úÖ –°–æ–±—ã—Ç–∏–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    const result = await client.query({
      query: 'SELECT count() as total FROM user_events',
      format: 'JSONEachRow'
    });
    
    const data = await result.json();
    console.log('   üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π:', data[0].total);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–µ —Å–æ–±—ã—Ç–∏–µ
    const ourEvent = await client.query({
      query: "SELECT * FROM user_events WHERE event_type = 'test_sync_login'",
      format: 'JSONEachRow'
    });
    
    const eventData = await ourEvent.json();
    console.log('   üéØ –ù–∞–π–¥–µ–Ω–æ –Ω–∞—à–∏—Ö —Å–æ–±—ã—Ç–∏–π:', eventData.length);
    if (eventData.length > 0) {
      console.log('   üìù –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:', eventData[0]);
    }

    console.log('\n‚ú® –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await client.close();
  }
}

testSyncInsert();