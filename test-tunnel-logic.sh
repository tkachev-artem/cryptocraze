#!/bin/bash

# –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env.production

set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')] $1${NC}"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞
test_env_update() {
    local test_url="https://test-domain-123.trycloudflare.com"
    local env_file=".env.production"
    
    log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env.production..."
    
    # –°–æ–∑–¥–∞–µ–º backup
    cp "$env_file" "$env_file.test.backup"
    
    info "–¢–µ–∫—É—â–∏–π API_URL:"
    grep "^API_URL=" "$env_file" || echo "API_URL –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º API_URL
    if grep -q "^API_URL=" "$env_file"; then
        log "–ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π API_URL..."
        sed -i.test "s|^API_URL=.*|API_URL=$test_url/api|" "$env_file"
    else
        log "–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π API_URL..."
        echo "API_URL=$test_url/api" >> "$env_file"
    fi
    
    info "–ù–æ–≤—ã–π API_URL:"
    grep "^API_URL=" "$env_file"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if grep -q "^API_URL=$test_url/api$" "$env_file"; then
        log "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!"
    else
        error "‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!"
    fi
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª
    mv "$env_file.test.backup" "$env_file"
    log "‚úÖ –§–∞–π–ª –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ backup"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL –∏–∑ –ª–æ–≥–∞
test_url_parsing() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ URL –∏–∑ –ª–æ–≥–∞..."
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥ —Ñ–∞–π–ª
    cat > test_tunnel.log << EOF
2025-09-07T19:00:59Z INF +--------------------------------------------------------------------------------------------+
2025-09-07T19:00:59Z INF |  Your quick Tunnel has been created! Visit it at (it may take some time to be reachable):  |
2025-09-07T19:00:59Z INF |  https://parents-drilling-seeds-defined.trycloudflare.com                                  |
2025-09-07T19:00:59Z INF +--------------------------------------------------------------------------------------------+
2025-09-07T19:00:59Z INF Cannot determine default configuration path...
EOF

    info "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–æ–≥–∞:"
    cat test_tunnel.log
    
    # –ü–∞—Ä—Å–∏–º URL
    tunnel_url=$(grep -o 'https://[^[:space:]]*\.trycloudflare\.com' test_tunnel.log | head -1)
    
    if [ ! -z "$tunnel_url" ]; then
        log "‚úÖ URL —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω: $tunnel_url"
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å URL –∏–∑ –ª–æ–≥–∞"
    fi
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    rm -f test_tunnel.log
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
test_dependencies() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ cloudflared:"
    if command -v cloudflared &> /dev/null; then
        log "‚úÖ cloudflared —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(cloudflared --version 2>&1 | head -1)"
    else
        log "‚ùå cloudflared –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ docker:"
    if command -v docker &> /dev/null; then
        log "‚úÖ docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
    else
        log "‚ùå docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ docker compose:"
    if command -v docker compose &> /dev/null || command -v docker-compose &> /dev/null; then
        log "‚úÖ docker compose –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log "‚ùå docker compose –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:"
    if [ -f ".env.production" ]; then
        log "‚úÖ .env.production –Ω–∞–π–¥–µ–Ω"
    else
        log "‚ùå .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ -f "docker-compose.yml" ]; then
        log "‚úÖ docker-compose.yml –Ω–∞–π–¥–µ–Ω"
    else
        log "‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
main() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ª–æ–≥–∏–∫–∏ –¥–µ–ø–ª–æ—è"
    echo "================================"
    
    test_dependencies
    echo ""
    
    test_url_parsing
    echo ""
    
    test_env_update
    echo ""
    
    log "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
}

main "$@"